version: '3'

services:
  service-registry:
    build: ./service-registry
    container_name: spring-service-registry
    ports:
      - "8761:8761"
  config-server:
    build: ./config-server
    container_name: spring-config-server
    entrypoint: ["/opt/docker-scripts/wait-for-service-registry.sh"]
    volumes:
      - ./docker-scripts:/opt/docker-scripts
    expose:
      - "8282"
    links:
      - service-registry
  api-gateway:
    build: ./api-gateway
    container_name: spring-api-gateway
    environment:
      - RETRIES=10
    entrypoint: ["/opt/docker-scripts/wait-for-config-server.sh"]
    volumes:
      - ./docker-scripts:/opt/docker-scripts
    ports:
      - "8181:8181"
    links:
      - service-registry
      - config-server
  rent-service:
    build: ./rent-service
    container_name: spring-rent-service
    environment:
      - RETRIES=10
    entrypoint: ["/opt/docker-scripts/wait-for-config-server.sh"]
    volumes:
      - ./docker-scripts:/opt/docker-scripts
    expose:
      - "8001"
    links:
      - service-registry
      - config-server
  retro-service:
    build: ./retro-service
    container_name: spring-retro-service
    environment:
      - RETRIES=10
    entrypoint: ["/opt/docker-scripts/wait-for-config-server.sh"]
    volumes:
      - ./docker-scripts:/opt/docker-scripts
    expose:
      - "8002"
    links:
      - service-registry
      - config-server
  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus-server
    volumes:
      - ./monitoring/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana-dashboard
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

